import numpy as np
import math
import matplotlib.pyplot as plt
input_raw = '''Tile 2053:
......#.#.
#....#....
#.#.......
.##.#..#.#
.##...####
#.#....#.#
##.##.#.#.
...##.....
####.##..#
#..##...##

Tile 1543:
.####.##..
.......#.#
..........
..#.......
#......#..
#....##...
#.#....#..
#..##....#
#.#..#....
#.#...####

Tile 2441:
.##.#..##.
#..#......
..#...#.##
...#.....#
#..##.....
......##..
###.#....#
##...#.#..
...#...###
.#..#.##.#

Tile 3733:
..#..#....
..#.#.....
......#.##
.#..#.##.#
..#....#..
......#..#
.###.#....
.#.#..#..#
.#....#...
#..#..##..

Tile 2237:
###.....#.
#..#.....#
........#.
#.#.......
#........#
##...#...#
..#.......
#.......##
##..#....#
...###...#

Tile 2203:
##..#....#
.....##...
...#....##
.........#
##....#..#
#.#..#.#..
.......###
.#....#..#
......###.
...#..#.##

Tile 1783:
#...##..#.
........#.
#..#.###.#
....#.##..
....#....#
..#.#....#
.........#
##.#.....#
#.#.....##
#....#..#.

Tile 1487:
#.....#...
#..#.#...#
..........
.........#
#.....##.#
....###.##
##...#...#
##......##
........#.
....#####.

Tile 3209:
...#....##
#...##..#.
..#.....##
#.##...###
...#..##.#
..#..#....
......#.#.
..........
.##...##.#
#..##.####

Tile 2557:
#......#.#
...#......
##.###.#..
.###....##
#.........
....#.#...
.#..###..#
...#...##.
.#.....#.#
.###.##.#.

Tile 1009:
###.##....
###.#..#.#
#.#....#..
.....##.##
...#.#....
..#.##.#..
#..##.#.##
#..#......
#..#...#.#
#..#.#..##

Tile 1361:
#..#..###.
....#...#.
##.#....##
......#..#
.........#
##..##...#
#...##...#
#...#.....
..##....##
#..#..####

Tile 2767:
.#.###.###
#.#.......
...#...##.
#..#...#..
#.#...#...
.#........
##....#...
#....#.#..
#.......#.
#.#.#..#..

Tile 1109:
.#..#..#.#
.....#..#.
......#..#
..##...#..
...#.#..##
...#.#..##
......##..
#...#..#..
#...#.....
..#.#.#.#.

Tile 1493:
###..####.
....##...#
#..#.#....
##.....#..
#..#.#..#.
#.........
#...#.#.#.
#.#..#.#.#
##.....#.#
#.#.#.###.

Tile 2971:
#####...#.
....#.....
#.......##
..#.#...##
...#.##..#
###.#..###
#......#.#
..........
...#..#...
.....#..##

Tile 2909:
.######.##
###..#...#
#....###..
#.####...#
..#.##....
#.........
..#.#....#
.#.##.##..
##.###.#.#
...##..#..

Tile 2551:
.#.##.#.#.
###.#..##.
#.......#.
##.......#
..###.....
#.##..#...
#.##....#.
#......#.#
......#.##
#.#...#..#

Tile 2917:
..###.##..
..#...#..#
#........#
#....##.##
#.........
...##.....
.###...##.
#.#...##..
.#.#.#.##.
.#.#..####

Tile 1553:
..##..#..#
#..#...#.#
#.#....#.#
##........
.###...#..
#.##.##.##
.....#..#.
#.....##..
.......#.#
##.#.#.##.

Tile 2297:
.##.##.#..
.##.#..##.
...#.#.###
...##...##
.#..##..##
##.#......
...#.....#
#.#.#...#.
.#......##
....#.##.#

Tile 1789:
####....#.
#.#.#..#..
...##.####
##.#.#...#
.###.....#
.#.#...##.
#...##.#..
##...#...#
..#.......
#######...

Tile 3079:
#.##..#.#.
#........#
..#..#....
..#..###.#
.......#.#
#....#####
#......##.
#..##.#...
#.......#.
###..##.##

Tile 3037:
..####.###
....##.#..
.......##.
....#...#.
..#.#.....
.#......##
##....##..
#..#.#.#..
##......##
###..###..

Tile 2677:
##.#..#...
.#........
..###..#.#
..##.....#
.##....#.#
#.#...#..#
......#.##
.......#.#
..........
#.#.#..###

Tile 1129:
.##.#.#.##
.........#
#.##.#....
.#...##..#
.#...#...#
..#..#.#..
##..#....#
##........
..#.##.###
##..#.####

Tile 2647:
.......#..
#........#
.....#.#..
.......##.
##..#.....
.#.###..#.
#....#.##.
#.#....#..
#.#..#...#
..##.###.#

Tile 2531:
#.#.##..##
##..#...#.
..#.......
##.......#
..........
.....#...#
#..###...#
#........#
#.........
.####..##.

Tile 1663:
.#.#..#...
..#...#...
##...##.#.
...#...#..
.##....#..
#........#
...#...#..
##....#..#
#.....#...
.####.##..

Tile 1193:
#......##.
..#.#.###.
#..#.....#
#.##.....#
.....#..##
....#.#..#
#..#.....#
..........
...###....
#..#.#.###

Tile 2477:
.#...#.##.
#....##..#
#.##.#...#
##..#.....
.........#
..#..#...#
.##...#.##
#.###.....
#..##.....
..#.##.#.#

Tile 2083:
.#.#.#.#..
###.#.....
.....#..##
...#.#....
#.......#.
.#.###....
#.#.#.....
.##..#.#.#
#.##.....#
..##.#.##.

Tile 2897:
###.####..
..##....##
###...#...
.......#..
#..#.#..#.
.....###..
......##..
....##..#.
.#...##..#
#.....#..#

Tile 3797:
#.....#...
..#.####.#
#....#.#..
#.....#.##
##..#.....
#....#..##
...#...#.#
.#....####
##.##.###.
###.#.#...

Tile 2087:
#####....#
..##...##.
...#......
.##......#
#..#....#.
.#..#....#
..##......
#........#
#.......#.
#.#.##...#

Tile 2447:
#.##....#.
##........
##........
#.#...#..#
##.#...#..
#..#..##.#
#........#
........#.
#...#....#
#.....#.##

Tile 1511:
#...#####.
..#.......
.........#
..#......#
###.......
.....#..##
#..#.....#
#.##.#....
......#..#
###.#.#.##

Tile 1249:
#.#..##...
#...#.#.#.
......#..#
#....##...
....#.##..
.#..##...#
#....###..
#....#....
.....#...#
...###.##.

Tile 2741:
###..#..#.
#.##.#...#
#...#....#
.....#...#
#.....#.#.
#.##.#...#
#.#..#...#
......#.#.
#...#..#..
..####.#..

Tile 3607:
#.#####..#
#..#.#.#.#
.......##.
#........#
#.#..#....
#..##.####
...#..#.#.
........##
..#...#.#.
...#..#..#

Tile 3877:
###..##...
##...#....
#.........
........##
#....#...#
#...#....#
.....#....
...#...#.#
#..#.#...#
.##...###.

Tile 1277:
..#....#.#
####..#...
#.........
..........
#...#..##.
...#.#...#
#........#
....#.....
...#..#..#
##.#....##

Tile 3491:
..#...##..
.........#
#.........
...#......
...#..#.##
#...##....
#....#.#..
#....##...
..#.#..#.#
#.#.#.#.#.

Tile 2011:
..##...##.
....#.#..#
#..#....##
..........
..........
.....#...#
#..#.#...#
........##
.#.......#
##.......#

Tile 1087:
#.#.#.#.#.
..#..#..##
#.###.....
#...#..#.#
#....#...#
#....#...#
..##..#.##
#...##....
##........
#......##.

Tile 3307:
#..##..#.#
...#######
#......###
..#......#
#....##..#
.#.#.#...#
#........#
#.......##
..#..#...#
#.#..##.#.

Tile 1949:
#.###..##.
#.#......#
#....#.##.
##......#.
#.......##
#.##.#...#
.##....#..
..........
...###....
..#..##..#

Tile 1061:
...#..#..#
#.....#..#
##.#....##
.#....#..#
..........
#.......##
.#.#.....#
..........
#.#...#.#.
........#.

Tile 1429:
##.#####..
.#........
#....#....
...#......
#........#
##.....#.#
....##.#..
....#..##.
#...#....#
###.#.##.#

Tile 2221:
###.#.....
#.......#.
....##.#.#
........##
..#..#....
..###....#
#........#
##.#.#....
#...#...##
##.######.

Tile 1117:
..#.##.#.#
##.......#
..#.#.....
.##......#
.##..#....
.........#
..#.......
##.#.#.#.#
#.#.......
#.#..#...#

Tile 1571:
..##.##..#
...#...#.#
#.##......
#..#......
..#..#...#
#.......##
...##....#
..#.#....#
#.#..#..##
.##..#.#..

Tile 2969:
.##..#..#.
..........
#......#..
#...#....#
..........
..##.#.###
.....#....
.......#.#
####..#.#.
..##..#...

Tile 2713:
####.##.#.
#.##.#.#..
#...##....
#......#..
#.##.#....
#.........
..##...#.#
#...#.#.#.
#.......##
..####..##

Tile 3121:
....#.##..
..#......#
..#..##...
#.#......#
#....#..##
....##...#
#..#.#....
#.....#..#
..#...#.#.
.#..####.#

Tile 3673:
.#.##..###
..#.#.....
...#..#..#
..........
.##....###
#..#...#..
#..##..#..
#...#.....
##.#..#..#
....##.###

Tile 2683:
..#...#.##
..#..##.##
###..#....
###..#..##
.......#..
..##.....#
#.....#..#
#.###.#.#.
#.#.#.###.
..#.#...#.

Tile 2617:
.#...#....
.......###
.##..#....
..#..###.#
#..##..#.#
#.#.###..#
..#..###.#
.#....#..#
##....#.##
..#.#..###

Tile 2341:
......###.
..#..#....
..#.#...#.
..#.#.###.
...##.#..#
##......#.
.........#
#..#...#..
#.......##
###...#...

Tile 1609:
..##.#.#..
#.......##
#......#.#
#.......#.
..##...#..
...#.#....
##......#.
.###...#..
.#....#..#
....#####.

Tile 3299:
#####.####
.##.....#.
..#...#...
...#....#.
#..#.#...#
#...#...##
#.....##.#
....#.##..
##....#...
.##..##.#.

Tile 1259:
##.#......
........#.
.....#.###
....#.#.##
#.....#.##
..#....#.#
..........
.##.##...#
....##..#.
...#...#..

Tile 2803:
.#..#.#..#
#...###..#
..###.####
#....#.#.#
##.......#
#.#.#.#...
.#.#.#.#.#
#....#....
....#....#
...###..#.

Tile 1063:
.#.##.##.#
......#.##
.#..#.##..
#....###..
....###...
.##....#.#
#.#.#....#
.....#..#.
##......##
.######..#

Tile 2113:
..#.######
####.....#
#.#....##.
........##
#.#.....##
...#.....#
#.........
#.....#..#
##.##.#.##
.##.###.##

Tile 1531:
.###..#.##
#.....##.#
.......#.#
........##
#.....#...
#.#.#...#.
..#...#..#
##.##.##..
..........
#...#...##

Tile 1289:
##.###.###
....#..#..
####....##
#.#....#..
#.........
#.#....#.#
...#......
.##.......
##..#.....
...##.####

Tile 3529:
###..#.#.#
#..###....
....#...##
.#....###.
##...#....
#.##.#.#..
####..#.#.
#....#....
#.##.##..#
#.##.#....

Tile 2389:
.##.##.#..
#.###...##
..##....##
#.###.#...
#.#......#
.#......##
##..#.#..#
#..#......
..###.....
#.#####..#

Tile 3727:
#.#.##..#.
##.###.###
#....##...
#....#...#
..##.....#
......#.#.
#.....#...
..........
#..#....##
.#.##.#...

Tile 1013:
##.#.#####
#.####...#
#..#....#.
#....##...
........##
.#.#.#....
#..#..##..
#.#.#.###.
...##..##.
##.###...#

Tile 3373:
.##..#.###
.....#....
...#..#...
#...#....#
#..####..#
#...#.##.#
.....##.##
....#.....
...##....#
.#..###...

Tile 3041:
.#..#.####
..........
.........#
..#.....#.
.....#....
#..#....#.
.......#.#
..#......#
....#..#..
..####..##

Tile 1627:
.###.#...#
...#..#.##
#...###..#
..#.......
##...##...
#.....####
##........
#..#......
#.##.....#
...#...#.#

Tile 1297:
#..#...#.#
#.........
..#.#..#..
..#......#
.#..##...#
....#..#.#
#...###...
#...#....#
#..#..#..#
##..#.#..#

Tile 1787:
####.....#
.....##..#
..........
#...#.....
..........
..#..#.#..
#..#..###.
#......##.
...##..#..
##.....###

Tile 3109:
##.###..##
.#.#......
.#.......#
#.........
#.#..#.#..
#.#....#..
#.....#..#
........##
##..#....#
##.###..#.

Tile 3541:
.##.####.#
.....#.#.#
#.........
.#.##...##
..........
#.......##
.#......##
.....###.#
##...##...
.#...#.##.

Tile 3347:
....##.#.#
..#..#..##
.#..#.##.#
....#.....
....#.....
#.....##.#
#....#....
##....#...
.#.......#
####.##.##

Tile 1721:
###.#.##.#
##..#.....
#.......#.
.#..##..#.
#.##....##
...#....##
##...#..#.
#.#.#.#...
#.#...#.##
..########

Tile 1847:
#...##.#.#
..#...#...
##........
.##......#
........##
.#.#.#....
.##.#....#
#..#......
.#..#..###
.#.##..###

Tile 3329:
###......#
##....#...
#.........
##.#.##.##
#.#.......
..........
##......#.
...#...###
#...#..##.
#......#..

Tile 3881:
.#.#..##..
##..#...#.
.......#..
#.#..#...#
#.#..#..##
#..##.##.#
#...#..#.#
#..#......
..#...#.#.
.####..###

Tile 1709:
#####.#.#.
.#.##..###
##..##...#
#####....#
#..#......
....#..#..
#...#.#...
#...#.#...
#..#.....#
#..#.####.

Tile 1171:
...#.#.#.#
#.....#...
#..#......
.......##.
.....#....
#...#...#.
#........#
#....#....
..#......#
...#.#.#..

Tile 1499:
########.#
#..#.###.#
...#.###..
#......#.#
###......#
...#......
#...##.#..
....#.#..#
###.#.#...
####.##..#

Tile 1283:
.##.###.#.
#.........
..#..##.##
....#.....
#.#.##..#.
.##...#..#
#........#
....#...##
.....##..#
#.#.###..#

Tile 1637:
.#.##.###.
....#.....
#..##.##..
.###...##.
####.....#
##.....#..
#.....##..
#.#.##.#..
#........#
#.#.###.#.

Tile 3911:
##.###....
#.#.##....
.#...#...#
.#.#.#...#
.#.....#..
##....##..
#.........
..#.#.....
##....#..#
##..###...

Tile 3259:
...#...#.#
...#..#..#
#.#.###...
#..#...#.#
#....###.#
....#.....
.#....#..#
#........#
#....#..##
##...#.##.

Tile 2099:
##.##..###
.....#.###
...##..#.#
..#.......
.###.#...#
..##.#.#..
#.#.......
#.##.....#
...#..###.
.##..#.#..

Tile 1237:
.##..###..
###..#....
#...#.#...
#......#..
.....#..#.
......##..
#...#.....
#.........
.#......##
...##.##..

Tile 1987:
#..#.#.###
...#...#..
#.#....#.#
..#...#...
....#..##.
#........#
.#.#.#..#.
#....###.#
#.#....#.#
..######.#

Tile 2539:
##.#...#..
..#..#.##.
#.....#...
#...#.#...
.........#
#.........
......#..#
#......#.#
......#.#.
.#..##....

Tile 2269:
#.##.#..##
#.......##
.#...#.##.
.##......#
.##.##....
#..#...#..
.#..#...#.
###.....#.
#......###
...#####.#

Tile 1583:
.##.####.#
...#....##
.........#
.....#...#
.#...##.##
#.....#..#
.#.#.#....
...#..#.#.
#..#.#...#
#.#..#.###

Tile 2749:
.#..#...#.
....##.###
##...#....
#.#..##.##
#.#..#....
.#.#..#..#
#...#..#..
####..#..#
#.#.#..#.#
#..##.##..

Tile 1613:
#.#.#.#..#
....#.##.#
....#.....
.#...###.#
.###.##..#
###.#.....
#.#....#.#
..#..#...#
#...#...#.
#.##.####.

Tile 1823:
...####..#
#....#...#
.....##.#.
....#.#..#
.#..##..##
#####.....
....##....
#....#...#
....#.....
...#.#.#.#

Tile 3821:
.#####.###
##....##..
##.#.##..#
.##...#..#
.##.....##
...#..#...
......#..#
.....#...#
.#.####.#.
..#.#....#

Tile 1451:
#..#..###.
###...#...
.......##.
.#......##
#.#.......
...#.....#
#.........
##....##..
#......###
##...###.#

Tile 1913:
#########.
#........#
#.##..#..#
.###.....#
##.......#
###.......
.....#...#
#...#.....
#.##......
..#.#..###

Tile 1307:
.#.##.#.#.
#..#..##.#
#.#...#..#
...#..#..#
#...#.....
#...#....#
.......##.
....#.....
...#.#....
##.###.#..

Tile 1777:
..#..##..#
##....#...
#...#..#..
.##...#..#
###.##.#.#
........##
.....#....
##.....#..
..#..#.#..
.##..##...

Tile 3011:
#.#..##.#.
#.....#..#
.###...#..
..........
#.....#...
...#.#....
#..#.....#
...#..##.#
#......#.#
...###....

Tile 2459:
#.##.##.##
.##.#....#
.....#.#.#
#.##...#..
.###.#.#..
.##.......
#.#..#....
.#.....#..
#.#...#.##
#.####.###

Tile 1123:
....#...##
..###.#.#.
....#.....
#.#..#..##
#.#..#..#.
.#..#.####
....#.###.
#..#.....#
........##
.####.....

Tile 3917:
##.#.#.###
.........#
........#.
.....#....
.#.....#.#
#.....#.#.
#..#...#..
#.........
#........#
#####..#.#

Tile 2287:
##.##.###.
##.....###
..#.....#.
#.....#.#.
#..#.#.###
.#...#...#
#..###..#.
#..##.....
###...#..#
#..####.##

Tile 1471:
#.##...#..
.##.#.#..#
#.......##
.......###
....#.#...
##.......#
#....#...#
#....###..
.##.#.##..
####.#....

Tile 2357:
####......
..#.......
#.#...#..#
#.........
..........
##..#..#..
.#..###...
..#..##...
##....###.
##...#....

Tile 1319:
###...###.
..#..#....
#..#.....#
......#.##
.........#
...#....#.
###..#...#
###..##..#
....##.#..
#...#.....

Tile 3467:
..#...#...
.#.....#.#
..#......#
..#......#
#..#....#.
.#....#.#.
##..#.....
###....#..
#.....##..
##...#...#

Tile 3407:
.###..####
#....#...#
#.........
..#....#.#
..#.....##
.#.....#.#
..#.#..#..
#..#.##...
.#....##..
.#####.###

Tile 2801:
#..##..##.
..#.....##
.....#....
..#...##..
#.#....#.#
#....#.#.#
..#...#.##
#.#..##..#
#...#.#..#
##.....#.#

Tile 1021:
......#.#.
...#...#..
#.#......#
##..#..#.#
##..#.....
..#..#..#.
......##.#
......##..
..##......
##....#...

Tile 3677:
#.#.......
#...#.##.#
....#..#.#
.#...#....
..........
.........#
..#..#.#.#
#.#.##...#
..##.....#
#.##.##.##

Tile 1321:
.#.#...#.#
#..##...##
#.#.....#.
###.......
#........#
.#..#....#
#.##.##...
#.#....##.
.##.....##
#.#####...

Tile 1607:
....###..#
..#...#...
.#.......#
#...#.....
...#......
#.........
#...#.....
........##
##...#...#
#....#.#.#

Tile 1979:
##.#.#....
.#..#...##
#.......#.
..........
..#...#...
.....#...#
.........#
...#..###.
.###......
#####..#..

Tile 2927:
#.##..###.
#.#......#
......#...
...#....##
#....##...
##.......#
#..#..#...
....#..#..
#...#.#..#
#.###.....

Tile 3203:
#.#..#..#.
.#.#......
....##..#.
....######
#........#
..#......#
##.#...#..
#......#.#
#.....#.##
.##..###.#

Tile 3323:
##..###.#.
.......#.#
.........#
#.........
........#.
.........#
###......#
..........
#...#.#..#
.##.#.###.

Tile 1489:
.#...##.#.
........##
.##.#...##
.......#.#
#.##.#.#.#
.##....##.
#....#..#.
#..#.....#
##.#.##.##
.#.#.#....

Tile 2273:
####.#..#.
##.#......
##..###.##
.##..#....
#..#.#...#
##...#....
#.#...#.#.
#..#.....#
##.#..#.#.
##...#..#.

Tile 2293:
.#.##.#...
..#.#.#.#.
.......###
#.#....#..
#......#.#
##..##.#.#
######..##
#.....#...
##....#..#
#.#####.##

Tile 1301:
#.....##..
#..#.....#
#......#.#
#....#....
##.#.#..##
......#...
#.........
#........#
#..#.....#
###..##...

Tile 1229:
.#..####..
##.....##.
##........
#...#.....
.#....#.#.
#.........
..#......#
##..##.#.#
#####....#
#..#.###..

Tile 3769:
.#..#.##.#
##.....#.#
#.#...#..#
..#..##..#
#.##.#####
.....##.#.
#.#.####..
.###...#..
#.#...#..#
.#.####...

Tile 3319:
######.###
....#...##
#..##..#.#
##.....#..
#.#.##..#.
#.#.#.....
.........#
#.#.#..###
....#..#.#
####....#.

Tile 3547:
##..#..##.
#.....#...
.#.......#
.......#.#
#.....#..#
#..##.#.#.
....#.#...
....#..#..
.....#....
...#.#..##

Tile 3643:
....####.#
...#......
.##......#
#...#.....
.......##.
##.......#
......##.#
#.....#...
#.#.......
######...#

Tile 1103:
#...#.#.#.
.........#
.....#....
.......#..
#......###
##......##
#..#.....#
#.#.....#.
#...#...##
.#.#...#.#

Tile 2711:
###.##.##.
....#...#.
##.......#
#.....#...
#...#.#.##
#..##.#...
..#....###
...#....##
.##.#####.
.##.##.#.#

Tile 1871:
#.###.####
.........#
#......#.#
..##....##
#..#..##.#
#..###...#
#.#.....##
......#.#.
.#.#.....#
#.#.#.....

Tile 3851:
..##.##.#.
.....#.#..
#....#...#
#..#..#..#
###.....#.
#.#..#..##
..#......#
.##.#....#
#....##.#.
.##..#.#.#

Tile 1151:
###......#
...##.....
....#.....
....#.....
#..#..#...
##....##..
..#......#
.#.....#.#
........##
.##.#..#.#

Tile 2377:
.##.##.#.#
.....##.##
###.......
#....##..#
##......#.
...#.##..#
#...#....#
.##..#.##.
#.###...#.
.#.#..##..

Tile 3581:
..#.#....#
..#.#..#..
.##..#.##.
#.##..##..
#.....#...
#..#...###
...#......
#.#.......
####......
#.#...####

Tile 1303:
##.#.#....
#.#.#.##.#
..#......#
.##.##...#
##..#..#..
#...#.#.##
##..#.#..#
..##.#....
#.........
.#.#..##.#

Tile 2843:
##.##..##.
#..##.##.#
#...#....#
#..#.####.
#...#.....
##....#..#
#...#.....
..#..###..
#..#..#..#
##..##...#

Tile 3617:
##...##..#
.#..#...#.
.##......#
#.####...#
##........
#.........
#......#..
##...#....
#.##..#..#
.##..##...

Tile 1091:
######..#.
....#.#..#
.....#...#
#....#...#
......#.##
...#.##...
#...#.....
..#.###...
#....#..##
#.###..#..

Tile 1213:
.##..#.#.#
.#..#..#..
##.#.#....
#....##..#
##........
##..#.....
#...#..#..
#...#..#..
#.......#.
#.....#.##'''

input = input_raw.split("\n\n")

input_test_raw = '''Tile 2311:
..##.#..#.
##..#.....
#...##..#.
####.#...#
##.##.###.
##...#.###
.#.#.#..##
..#....#..
###...#.#.
..###..###

Tile 1951:
#.##...##.
#.####...#
.....#..##
#...######
.##.#....#
.###.#####
###.##.##.
.###....#.
..#.#..#.#
#...##.#..

Tile 1171:
####...##.
#..##.#..#
##.#..#.#.
.###.####.
..###.####
.##....##.
.#...####.
#.##.####.
####..#...
.....##...

Tile 1427:
###.##.#..
.#..#.##..
.#.##.#..#
#.#.#.##.#
....#...##
...##..##.
...#.#####
.#.####.#.
..#..###.#
..##.#..#.

Tile 1489:
##.#.#....
..##...#..
.##..##...
..#...#...
#####...#.
#..#.#.#.#
...#.#.#..
##.#...##.
..##.##.##
###.##.#..

Tile 2473:
#....####.
#..#.##...
#.##..#...
######.#.#
.#...#.#.#
.#########
.###.#..#.
########.#
##...##.#.
..###.#.#.

Tile 2971:
..#.#....#
#...###...
#.#.###...
##.##..#..
.#####..##
.#..####.#
#..#.#..#.
..####.###
..#.#.###.
...#.#.#.#

Tile 2729:
...#.#.#.#
####.#....
..#.#.....
....#..#.#
.##..##.#.
.#.####...
####.#.#..
##.####...
##..#.##..
#.##...##.

Tile 3079:
#.#.#####.
.#..######
..#.......
######....
####.#..#.
.#...#.##.
#.#####.##
..#.###...
..#.......
..#.###...'''

input_test = input_test_raw.split("\n\n")

# Uncomment this row to use test input
#input = input_test

# Parse input
all_tiles = {}
for tile_raw in input:
    tile_binary = tile_raw.replace('#','1').replace('.','0').split('\n')
    tile_id = int(tile_binary[0].replace(':','').replace('Tile ',''))
    tile_data = []
    for row in tile_binary[1:]:
        tile_data.append(list(map(int,list(row))))
    tile_data_matrix = np.array(tile_data)
    all_tiles[tile_id] = tile_data_matrix

# PART 1
# Each tile: filp 0-v * rotate 0-90-180-270 = 2*4 = 8

########################################################################
### FUNCTIONS PART 1
########################################################################

# check if 2 tiles aligns border in any combination of [(filp / no flip) * rotation(0, 90, 180, 270))
def is_adjacent(tile1, tile2):
    for t1_flip in [tile1, np.flipud(tile1)]:           # flip tile 1
        for k1 in range(0,4):                           # rotate tile 1
            t1_rot = np.rot90(t1_flip, k1)
            t1_top_border = t1_rot[0]
            for t2_flip in [tile2, np.flipud(tile2)]:   # flip tile 2
                for k2 in range(0,4):                   # rotate tile 2
                    t2_rot = np.rot90(t2_flip, k2)
                    t2_bottom_border = t2_rot[-1]
                    if(t1_top_border == t2_bottom_border).all():
                        #print(k1,k2,t1_top_border,t2_bottom_border )
                        return True
    return False

# Find all tiles that are possibly adjacent to a given tile
def find_adjacent_tiles(tile_no, all_tiles):
    adjacents = []
    t1 = all_tiles[tile_no]
    for t2_no in list(all_tiles.keys()):
        if t2_no == tile_no: # dont compare a tile with itself
            continue
        t2 = all_tiles[t2_no]
        if(is_adjacent(t1,t2)):
            adjacents.append(t2_no)
    return adjacents

########################################################################
### MAIN PART 1
########################################################################

# find tiles that have only 2 adjacents => tiles at 4 corners
print('-'*10 + 'PART 1' + '-'*10)
print('Start finding tiles at 4 corners (tiles having 2 adjacents)...')

corners = []
answer = 1
tiles_count = len(all_tiles.keys())
for i, tile_no in enumerate(list(all_tiles.keys())):
   adjacent_count = len(find_adjacent_tiles(tile_no, all_tiles))
   if(adjacent_count == 2):
       corners.append(tile_no)
       answer *= tile_no
    
   if i> 0 and i%20  == 0:
       print('\tProcessed {}/{} tiles ({:.2%})'.format(i, tiles_count, i/tiles_count))

print('Done.')
print('Tile count: {}'.format(len(all_tiles.keys())))
print('Corner tiles: {}'.format(corners))
print('Part 1 answer: {}'.format(answer))

########################################################################
########################################################################
########################################################################

# PART 2
# Verified: number of tiles having 2,3,4 adjacent tiles: {4: 100, 3: 40, 2: 4}

########################################################################
### FUNCTIONS
########################################################################

# given 2 adjacent tiles, rotate/flip tile 2 so that it aligns with tile1
# returns flipped/ rotated tile2 and relative coordinate of tile2
# returns None if tile2 can't be transformed to match with tile1
def adjacent_assemble(tile1, tile2):
    u1,d1,l1,r1 = tile1[0], tile1[-1], tile1[:,0], tile1[:,-1] # 4 borders of tile1
    for t2_flip in [tile2, np.flipud(tile2)]:    # flip tile 2
        for k in range(0,4):                    # rotate tile 2
            t2_rot = np.rot90(t2_flip, k)
            u2,d2,l2,r2 = t2_rot[0], t2_rot[-1], t2_rot[:,0], t2_rot[:,-1]
            if(u1 == d2).all():
                return [t2_rot,(0,1)]
            if(d1 == u2).all():
                return [t2_rot,(0,-1)]
            if(r1 == l2).all():
                return [t2_rot,(1,0)]
            if(l1 == r2).all():
                return [t2_rot,(-1,0)]    
    return [None, None]

# Function to add adjacent tiles to a given tile_no into the complete pic
# Tile is removed from remaining tiles after a successful match
# After adding, recursively call this function to adjacent tiles until no tiles left
def tile_assemble(tile_no, abs_pos, remaining_tiles, pic):
    # progress tracking
    remaining_tiles_count = len(remaining_tiles)
    if (remaining_tiles_count > 0 and remaining_tiles_count % 20 == 0):
        print('\tAssembling in progress, {} tiles remaining ...'.format(remaining_tiles_count))
    #print(tile_no, len(remaining_tiles))
    if((remaining_tiles_count == 0) or (tile_no not in remaining_tiles)):
        return
    given_tile = remaining_tiles[tile_no]
    adjacents = find_adjacent_tiles(tile_no, remaining_tiles)
    #print(adjacents)
    remaining_tiles.pop(tile_no)
    for ad_tile_no in adjacents:
        ad_tile =  remaining_tiles[ad_tile_no]
        transformed_tile, ad_rel_pos = adjacent_assemble(given_tile, ad_tile)
        remaining_tiles[ad_tile_no] = transformed_tile
        ad_abs_pos = tuple(sum(t) for t in zip(abs_pos, ad_rel_pos))
        pic[ad_tile_no] = {'pos':ad_abs_pos, 'tile_data':transformed_tile}
    for ad_tile_no in adjacents:   
        ad_abs_pos =  pic[ad_tile_no]['pos']
        tile_assemble(ad_tile_no, ad_abs_pos, remaining_tiles, pic)

# Find number of times a pattern appears in a pic
def find_pattern(pattern, pic):
    match_count = 0
    (win_size_row, win_size_col) = pattern.shape
    (pic_size_row, pic_size_col) = pic.shape
    # Slide a windown of same size with pattern throughout the pic
    for row in range(pic_size_row - win_size_row + 1):
        for col in range(pic_size_col - win_size_col + 1):
            window = pic[row : row + win_size_row, col : col + win_size_col]
            # because pattern is a binary matrix, it can be used as a mask
            window_masked = window * pattern 
            # if masking result == patter, then an occurence of pattern is found in the pic
            if(window_masked == pattern).all():
                match_count += 1
    return match_count

########################################################################
### MAIN PART 2
########################################################################
print('-'*10 + 'PART 2' + '-'*10)

# Get a random tile to use as first tile
first_tile_no = list(all_tiles.keys())[0]
finished_pic = {}
finished_pic[first_tile_no] = {'pos':(0,0), 'tile_data':all_tiles[first_tile_no]}

# Start from first tile, assemble other tiles to form a complete picture
print('Start assembling tiles...')
tile_assemble(first_tile_no, (0,0), all_tiles, finished_pic)
print('Assembling done.')

# Find x,y offsets to shift bottom-left tile to (0,0)
all_x = []
all_y = []
tile_nos = []
for tile_no in finished_pic:
    x,y = finished_pic[tile_no]['pos']
    all_x.append(x)
    all_y.append(y)
    tile_nos.append(tile_no)
x_offset = min(all_x)
y_offset = min(all_y)

# Shift bottom-left tile to (0,0)
all_x = []
all_y = []
for tile_no in finished_pic:
    x,y = finished_pic[tile_no]['pos']
    x -= x_offset
    y -= y_offset
    finished_pic[tile_no]['pos'] = (x,y)
    all_x.append(x)
    all_y.append(y)

# #### Uncomment to visualize tile arrangement
# plt.scatter(all_x, all_y)
# for i, txt in enumerate(tile_nos):
#     plt.annotate(txt, (all_x[i], all_y[i]))
# plt.show()

# Initialize matrix that holds complete picture
tile_size = finished_pic[first_tile_no]['tile_data'].shape[0] - 2 # borders need to be removed
tile_count = int(math.sqrt(len(finished_pic)))
pic_size = tile_count*tile_size
full_pic = np.zeros((pic_size, pic_size)).astype(int)

# Add tile data into complete picture:
for tile_no in finished_pic:
    tile = finished_pic[tile_no]['tile_data']

    # Remove 4 borders
    tile = np.delete(tile, (0), axis = 0)
    tile = np.delete(tile, (-1), axis = 0)
    tile = np.delete(tile, (0), axis = 1)
    tile = np.delete(tile, (-1), axis = 1)

    pos = finished_pic[tile_no]['pos']
    max_row = pic_size - (pos[1] * tile_size)
    min_row = max_row - tile_size
    min_col = pos[0] * tile_size
    max_col = min_col + tile_size
    full_pic[min_row:max_row,min_col:max_col] = tile

# Convert sea monter shape to matrix
sea_monster_pattern_raw = '''                  # 
#    ##    ##    ###
 #  #  #  #  #  #   '''

pattern_binary = sea_monster_pattern_raw.replace('#','1').replace(' ','0').split('\n')
pattern_data_lst = []
for row in pattern_binary:
    pattern_data_lst.append(list(map(int,list(row))))
pattern_data = np.array(pattern_data_lst)

# Flip + rotate picture until there is a filp/rotation that contains at least a sea monster
for full_pic_flip in [full_pic, np.flipud(full_pic)]:    # flip full pic
    for k in range(0,4):                    # rotate full pic
        full_pic_transformed = np.rot90(full_pic_flip, k)
        monster_count = find_pattern(pattern_data, full_pic_transformed)
        if (monster_count > 0):
            count_1_pic = np.count_nonzero(full_pic_transformed) 
            count_1_monster = np.count_nonzero(pattern_data)
            print('Found {} sea monsters in picture'.format(monster_count))
            print('Number of # in picture: {}'.format(count_1_pic))
            print('Number of # in sea monster patter: {}'.format(count_1_monster))
            print('Part 2 answer: {}'.format(count_1_pic - count_1_monster * monster_count))
            exit()
